name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64
    env:
      CGO_ENABLED: 0
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      VERSION: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build binary
        run: |
          mkdir -p dist
          OUT_BASE="todox-${VERSION}-${GOOS}-${GOARCH}"
          if [ "${GOOS}" = "windows" ]; then
            OUT_FILE="${OUT_BASE}.exe"
          else
            OUT_FILE="${OUT_BASE}"
          fi
          go build -trimpath -o "dist/${OUT_FILE}" ./cmd/todox

      - name: Package artifact
        shell: bash
        run: |
          cd dist
          OUT_BASE="todox-${VERSION}-${GOOS}-${GOARCH}"
          if [ "${GOOS}" = "windows" ]; then
            BIN_FILE="${OUT_BASE}.exe"
            ARCHIVE_NAME="${OUT_BASE}.zip"
            zip -9 "${ARCHIVE_NAME}" "${BIN_FILE}"
            rm "${BIN_FILE}"
          else
            BIN_FILE="${OUT_BASE}"
            ARCHIVE_NAME="${OUT_BASE}.tar.gz"
            tar -czf "${ARCHIVE_NAME}" "${BIN_FILE}"
            rm "${BIN_FILE}"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: todox-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/todox-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}.*

  release:
    name: Publish release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: 'todox-*'
          path: dist
          merge-multiple: true

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
